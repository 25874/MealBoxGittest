@model MealBoxCloud.Models.InventoryModel
@{
    ViewBag.Title = "AddInventory";
}

@section Styles {

    <link href="~/Scripts/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />

    <style>
        span.error {
            display: block;
            visibility: hidden;
            color: red;
            font-size: 100%;
        }

        tr.error {
            background-color: rgba(255,0,0,0.35);
        }
    </style>

}

<h2>Deduct Inventory</h2>

<div class="card-header">
    @*<div style="float:left">
            @Html.LabelFor(x => x.Defected)
            @Html.CheckBoxFor(x => x.Defected)
        </div>*@
    <div style="float:left">
        @Html.LabelFor(x => x.Date)
        @Html.TextBoxFor(x => x.Date)
        <span class="error"> Please Write Items Name...</span>
        </div>
  
</div>

<div class="row">
    <div class="col-md-2">
        @Html.Label("Product Type")
        @Html.DropDownListFor(x => x.ProductTypeID, null, "---Select---", new { @class = "form-control" })
        <span class="error"> Please Write Items Name...</span>
    </div>
    <div class="col-md-2">
        @Html.Label("Product")
        @Html.DropDownListFor(x => x.Product, null, "---Select---", new { @class = "form-control" })
        <span class="error"> Please Write Items Name...</span>
    </div>
    <div class="col-md-2">
        @Html.Label("Quatity")
        @Html.TextBoxFor(x => x.StockQty, new { @class = "form-control CAl num" })
        <span class="error"> Please Write Items Name...</span>
    </div>
    <div class="col-md-2">
        @Html.Label("Price")
        @Html.TextBoxFor(x => x.unitprice, new { @class = "form-control" })
        <span class="error"> Please Write Items Name...</span>
    </div>
    <div class="col-md-2">
        @Html.Label("Amount")
        @Html.TextBoxFor(x => x.amount, new { @class = "form-control " })
        <span class="error"> Please Write Items Name...</span>
    </div>
    <input type="hidden" id="StockCount" value="@ViewBag.StockCount">
</div>

<div class="row">
    @Html.LabelFor(x => x.Remarks)
    @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control" })
    <span class="error"> Please Write Items Name...</span>
</div>

<div style="margin-top:30px;" class="row">

    <input type="button" id="Save" class="btn btn-success" value="Create" />
    <div class="col-md-3">
        @Html.ActionLink("Return To List", "InventoryList")
    </div>

</div>


@section Scripts
    {

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            $('#Date').datepicker({
                format: "dd-MM-yyyy",
                orientation: "bottom auto",
                autoclose: true
            });
        })



        $(".num").keypress(function (e)
        {
            debugger;
            var charCode = (e.which) ? e.which : e.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }


            $('#MPurDate').datepicker({
                format: "dd-MM-yyyy",
                orientation: "bottom auto",
                autoclose: true
            });

        });



        


        $('#Product').change(function () {
            debugger;
            var Id = $(this).val();

            if ($('#Product option:selected').text() == "---Select---") {
                var fill = '<option value="-1" >Select</option>'
                $('#EmployeeId').html(fill)
                /*$('#EmployeeTypeId').siblings('span.error').css('visibility', 'visible')*/
            }
            else {
                $.ajax({
                    type: 'Get',
                    url: '/Product/Itemprice?id=' + Id,
                    contentType: "application/json?charset=utf-8",
                    success: function (result) {
                        debugger;
                        $('#unitprice').val(result.PurchasePrice);
                    }
                })
            }
        })


        $('#ProductTypeID').change(function () {
            debugger;
            var Id = $(this).val();

            if ($('#ProductTypeID option:selected').text() == "---Select---") {
                var fill = '<option value="-1" >Select</option>'
                $('#EmployeeId').html(fill)
                /*$('#EmployeeTypeId').siblings('span.error').css('visibility', 'visible')*/
            }
            else {
                $.ajax({
                    type: 'Get',
                    url: '/Product/ProductList?id=' + Id,
                    contentType: "application/json?charset=utf-8",
                    success: function (result) {
                        debugger;
                        console.log(result);
                        var fill = '<option value="-1" >---Select---</option>'
                        for (var i = 0; i < result.length; i++) {
                            fill += '<option value="' + result[i].ProductID + '">' + result[i].ProductName + '</option>';
                        }
                        $('#Product').html(fill);
                    }
                })
            }
        })


        


        $('.CAl').keyup(function () {
            debugger;
            var Qty = $(this).val();
            if (Qty != "" && $('#Product option:selected').text() != "---Select---") {

                var Price = $('#unitprice').val();
                var Total = parseFloat(Qty) * parseFloat(Price);
                $('#amount').val(parseFloat(Total))

            }
            else {
                //$('#NetTotal').val('');
                //$('#csh_amt').val('');
            }

        });



        $('#Save').click(function () {
            debugger;
            var isallvalid = true;
            isallvalid = Validate();
            if (isallvalid) {
                var GetDateTime = new Date();
                var obj = {
                    "StockInID": $('#Product').val(),
                    "Itm_nam": $('#Product option:selected').text(),
                    "StockQty": $('#StockQty').val(),
                    "unitprice": $('#unitprice').val(),
                    "amount": $('#amount').val(),
                    "unitprice": $('#unitprice').val(),
                    "Defected": $('#Defected').val(),
                    "Date": $('#Date').val(),
                    "Remarks": $('#Remarks').val(),
                    "created_by": "Sajid",
                    "StockRef": $('#StockCount').val(),
                    "CreatedAt": $('#Date').val()
                }
                $.ajax({
                    type: 'Post',
                    url: '/Inventory/AddInventory',
                    contentType: "application/json?charset=utf-8",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        Clear();
                        swal("", "Data Has Been Save", "success");
                    },
                })
            }
        })


        function Clear() {

            $('input[type="text"]').val('')
            $('select').each(function () {
                $(this).val('')
            }
            )
            $("#Effected").prop("checked", false);
        }


        $('#ProductTypeID').change(function () {
            if ($('#ProductTypeID option:selected').text() == "---Select---") {
                $('#ProductTypeID').siblings('span.error').css('visibility', 'visible')
            }
            else {
                $('#ProductTypeID').siblings('span.error').css('visibility', 'hidden')
            }
        })

        $('#Product').change(function () {
            if ($('#Product').val().trim() != "") {
                $('#Product').siblings('span.error').css('visibility', 'hidden')
            }
            else {
                $('#Product').siblings('span.error').css('visibility', 'visible')
            }
        })


        $('#StockQty').change(function () {
            if ($('#StockQty').val().trim() != "") {
                $('#StockQty').siblings('span.error').css('visibility', 'hidden')
            }
            else {
                $('#StockQty').siblings('span.error').css('visibility', 'visible')
            }
        })
        

        $('#Date').change(function () {
            if ($('#Date').val().trim() != "") {
                $('#Date').siblings('span.error').css('visibility', 'hidden')
            }
            else {
                $('#Date').siblings('span.error').css('visibility', 'visible')
            }
        })

        function Validate() {
            debugger;
            var isallvalid = true;

            if ($('#ProductTypeID option:selected').text() == "---Select---") {
                $('#ProductTypeID').siblings('span.error').css('visibility', 'visible')
                isallvalid = false;
            }
            else {
                $('#ProductTypeID').siblings('span.error').css('visibility', 'hidden')
            }
            if ($('#Product option:selected').text() == "---Select---") {
                $('#Product').siblings('span.error').css('visibility', 'visible')
                isallvalid = false;
            }
            else {
                $('#Product').siblings('span.error').css('visibility', 'hidden')
            }

            if ($('#StockQty').val().trim() == "") {
                $('#StockQty').siblings('span.error').css('visibility', 'visible')
                isallvalid = false;
            }
            else {
                $('#StockQty').siblings('span.error').css('visibility', 'hidden')
            }
            

        
            return isallvalid;
        }

    </script>
}
