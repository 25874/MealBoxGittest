@model MealBox.Models.SalesModel
@{
    ViewBag.Title = "AddSales";
}

<h2>AddSales</h2>

@section Styles
    {

    <link href="~/dist/css/sweetalert.css" rel="stylesheet" />
    <style>
        span.error {
            display: block;
            visibility: hidden;
            color: red;
            font-size: 100%;
        }

        tr.er {
            background-color: rgba(255,0,0,0.35);
        }
    </style>
}

@using (Html.BeginForm("AddSupplier", "Managment", FormMethod.Post, new { @id = "AddSupplier" }))
{
    @Html.LabelFor(x => x.Effected)
    @Html.CheckBoxFor(x => x.Effected.HasValue)
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(x => x.MSal_dat)
            @Html.TextBoxFor(x => x.MSal_dat, new { @class = "form-control", @placeholder = "Enter Item Name" })
            <span class="error">Please Write Supplier Name..</span>
        </div>
        <div class="col-md-6">
            @Html.Label("SalNo")
            <input type="text" class="form-control" name="SalNo" id="SalNo" value="@ViewBag.SalNo" readonly="readonly" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(x => x.CustomerID)
            @Html.DropDownListFor(x => x.CustomerID, null, "---Select---", new { @class = "form-control" })
            <span class="error">Please Select Vendor..</span>
        </div>

    </div>
}


<div class="row">
    <div class="col-md-4">
        @*@Html.LabelFor(x => x.MPurRmk)
            @Html.TextBoxFor(x => x.MPurRmk, new { @class = "form-control", @placeholder = "Enter Item Name" })*@
        @Html.HiddenFor(x => x.MSaleid)
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            <i class="fa-solid fa-align-justify"></i>
            Add Product
        </h3>
        <div class="card-tools">
            <button type="button" class=" btn btn-tool" data-card-widget="collapse">
                <i class="fas fa-minus"></i>
            </button>
        </div>
    </div><!-- /.card-header -->
    <div class="card-body">
        <table id="AddSales" class="table table-bordered">
            <thead>
                <tr>
                    <th style="text-align:center">Product</th>
                    <th style="text-align:center">Qunatity</th>
                    <th style="text-align:center">Unit Price</th>
                    <th style="text-align:center">Amount</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="body1">
                <tr>
                    <td>
                        @Html.DropDownListFor(x => x.ProductID, null, "---Select---", new { @class = "form-control " })
                    </td>
                    <td>
                        @Html.TextBoxFor(x => x.DSal_ItmQty, new { @class = "form-control CAl  " })
                    </td>
                    <td>
                        @Html.TextBoxFor(x => x.DSal_salcst, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                    <td>
                        @Html.TextBoxFor(x => x.Amount, new { @class = "form-control " })
                    </td>
                    <td>
                        <a style="width:100%; height:100%" id="AddItems"><i class="fa-solid fa-cart-plus"></i></a>
                    </td>
                    <td>
                        <label class="duclab" style="color:red; margin-top:20px; display:none;">Please Select a Deduction</label>
                    </td>

                </tr>

                @if (Model.saleschilds != null)
                {
                    foreach (var item in Model.saleschilds)
                    {
                        <tr class="select-row2">
                            <td class="deductionTypeName">
                                <input type="text" value=" @item.ItemName" class="form-control" />
                            </td>
                            <td class="DeductionAmount">
                                <input type="text" value="@item.ItemQty" class="form-control" />
                            </td>
                            <td class="DeductionDate">
                                <input type="text" value="@item.ItemCost" class="form-control" />
                            </td>
                            <td class="DeductionDate">
                                <input type="text" value="@item.ItemTotalAmount" class="form-control" />
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger cheak delete2 " value="">Delete</button>
                            </td>
                            <td>
                                <label style="visibility:hidden">@item.ItemId</label>
                            </td>
                            <td>
                                @Html.HiddenFor(x => x.DSalHid, new { @class = "form-control deductionhid", Value = item.DSalId, @readonly = true })
                            </td>
                        </tr>
                    }
                }
            </tbody>

        </table>
    </div>
</div>

<div class="row" style="margin-top:50px;">
    <div class="col-md-4">
        @Html.LabelFor(x => x.PreBalance)
        @Html.TextBoxFor(x => x.PreBalance, new { @class = "form-control", @Value = "0" })
        <span class="error">Please Write Contact Person...</span>
    </div>

    @*<div class="col-md-3">
            @Html.LabelFor(x => x.sdisamt)
            @Html.TextBoxFor(x => x.sdisamt, new { @class = "form-control", @placeholder = "Enter Item Name" })
        </div>*@
    <div class="col-md-4">
        @Html.LabelFor(x => x.GTtl)
        @Html.TextBoxFor(x => x.GTtl, new { @class = "form-control", @placeholder = "Enter Item Name " })
    </div>
    <div class="col-md-4">
        @Html.LabelFor(x => x.Amt)
        @Html.TextBoxFor(x => x.Amt, new { @class = "form-control", @placeholder = "Enter Item Name" })
        <input type="hidden" id="hAmt"/>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        @Html.LabelFor(x => x.Dis)
        @Html.TextBoxFor(x => x.Dis, new { @class = "form-control Dis", @placeholder = "Enter Item Name" })
    </div>
    <div class="col-md-4">
        @Html.LabelFor(x => x.MSal_Rmk)
        @Html.TextAreaFor(x => x.MSal_Rmk, new { @class = "form-control", @placeholder = "Enter Item Name" })
        
    </div>
</div>

    <div class="row" style="margin-top:30px;">
        <input type="button" class="btn btn-success" value="Save" id="Save" />
        <div class="col-md-3">
            @Html.ActionLink("Return To List", "SalesList")
        </div>
        @Html.HiddenFor(x => x.MSaleid)
        <div class="custom-control custom-switch">
            @Html.CheckBoxFor(x => x.Effected.HasValue, new { @class = "custom-control-input", @id = "Effected" })
            <label class="custom-control-label" for="Effected">Inventory Effect</label>
        </div>
    </div>

    @section Scripts
    {

        <script src="~/plugins/toastr/toastr.min.js"></script>
        <script src="~/dist/js/sweetalert.js"></script>
        <script type="text/javascript">

            $("#ProductID").change(function () {

                $('#DSal_salcst').val('');
                $('#DSal_ItmQty').val('');
                $('#Amount').val('');

                if ($('#ProductID option:selected').text() != "---Select---")
                {
                    var id = $(this).val();
                    $.ajax({
                        url: '/Product/Itemprice?id=' + id,
                        method: 'Get',
                        contentType: 'application/jsonCharset=utf-8',
                        success: function (data) {
                            debugger;
                            console.log(data);
                            $('#DSal_salcst').val(data.PurchasePrice);
                            var quatity = data.Quantity;
                            var Product = $('#ProductID option:selected').text();
                            toastr.options = {
                                "closeButton": true,
                                "debug": false,
                                "newestOnTop": false,
                                "progressBar": false,
                                "positionClass": "toast-top-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": 0,
                                "extendedTimeOut": 0,
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut",
                                "tapToDismiss": false
                            }
                            toastr["info"]("<div><input class='input - small' value='  " + Product + ' Quantity is ' + quatity + "'/><br /><button type='button' class='btn clear'></button></div>")

                        }
                    })
                }
            })

            $("#CustomerID").change(function () {
                debugger;
                if ($('#CustomerID option:selected').text() != "---Select---") {
                    var id = $(this).val();

                    $.ajax({
                        url: '/Sales/GetSaleCredit?id=' + id,
                        method: 'Get',
                        contentType: 'application/jsonCharset=utf-8',
                        success: function (data) {
                            console.log(data);
                            if (data != null) {
                                $('#PreBalance').val(data);
                            }
                        }
                    })
                }
            })

            $("#CustomerID").change(function () {

                if ($('#CustomerID').val() != "") {
                    $('#CustomerID').siblings('span.error').css('visibility', 'hidden')

                }
                else {
                    $('#CustomerID').siblings('span.error').css('visibility', 'visible')
                }

            })

            $('.Dis').keyup(function () {

                debugger;

                var Dis = $('#Dis').val()

                var NetTotal = $('#Amt').val();
                
                var hNetTotal = $('#hAmt').val();

                if (NetTotal != "") {
                    var bal = parseFloat(hNetTotal) - parseFloat(Dis);
                    if (isNaN(bal)) {

                        var Amount = parseFloat(hNetTotal)
                        $('#Amt').val(Amount)
                    }
                    else {
                        $('#Amt').val(bal)

                    }
                }
            })



            $("#MSal_dat").change(function () {

                if ($('#MSal_dat').val() != "") {
                    $('#MSal_dat').siblings('span.error').css('visibility', 'hidden')

                }
                else {
                    $('#MSal_dat').siblings('span.error').css('visibility', 'visible')
                }

            })


            $("#DSal_ItmQty").change(function () {
                debugger;
                if ($('#DSal_ItmQty option:selected').text() != "---Select---") {
                    var id = $('#ProductID').val();
                    var Qty = $(this).val();
                    var qtyf = parseFloat(Qty);
                    $.ajax({
                        url: '/Product/Itemprice?id=' + id,
                        method: 'Get',
                        contentType: 'application/jsonCharset=utf-8',
                        success: function (data) {
                            debugger;
                            console.log(data);
                            var cheakQty = '0';
                            cheakQty = data.Limit;
                            if (cheakQty <= qtyf) {
                                swal({
                                    title: "Stock Less",
                                    icon: "warning",
                                    dangerMode: true,
                                })
                            }
                        }
                    })
                }
            })

            $('#AddSales tbody ').on('click', '.delete2', function () {
                debugger;
                $(this).closest('tr').remove();
                addcal();
                $('#Amt').val('');
            });

            function Validate() {

                var isallvalid = true;

                if ($('#MSal_dat').val() == "") {
                    $('#MSal_dat').siblings('span.error').css('visibility', 'visible')
                    isallvalid = false;
                }
                else {
                    $('#MSal_dat').siblings('span.error').css('visibility', 'hidden')
                }
                if ($('#CustomerID').val() == "") {
                    $('#CustomerID').siblings('span.error').css('visibility', 'visible')
                    isallvalid = false;
                }
                else {
                    $('#CustomerID').siblings('span.error').css('visibility', 'hidden')
                }
                if ($('#Amt').val() == "") {
                    $('#Amt').siblings('span.error').css('visibility', 'visible')
                    isallvalid = false;
                }
                else {
                    $('#Amt').siblings('span.error').css('visibility', 'hidden')
                }

                return isallvalid;
            }

            $(document).ready(function () {

                $('#MSal_dat').datepicker({
                    format: "dd-MM-yyyy",
                    orientation: "bottom auto",
                    autoclose: true
                });
            })


            $('.CAl').keyup(function () {
                debugger;
                var Qty = $(this).val();
                if (Qty != "" && $('#ProductID option:selected').text() != "---Select---") {

                    var Price = $('#DSal_salcst').val();
                    var Total = parseFloat(Qty) * parseFloat(Price);
                    $('#Amount').val(parseFloat(Total))

                }
                else {
                    $('#Amount').val('');
                }
            });


            function addcal() {
                debugger;
                var total = 0;
                var PreAmt = parseFloat($('#PreBalance').val());
                var Grandtotal = 0;

                $('#AddSales tbody .select-row2 ').each(function (index, ele) {
                    total += parseFloat($(this).closest('tr').find('td').eq('3').find('input').val());
                })

                var ftotal = parseFloat(total);

                if (PreAmt > 0) {
                    Grandtotal = ftotal + Math.abs(PreAmt);
                }
                else {
                    Grandtotal = ftotal - PreAmt;
                }

                //$('#csh_amt').val(ftotal.toFixed(2))
                $('#GTtl').val(ftotal.toFixed(2));
                $('#Amt').val(Grandtotal.toFixed(2));
                $('#hAmt').val(Grandtotal.toFixed(2));

            }


            $('.Per').keyup(function () {
                Percentagecalculate();
            });

            function Percentagecalculate() {
                debugger;
                var Dis = parseInt($('#Dis').val());
                var Amt = parseInt($('#Amt').val());

                var perc = "";
                var deduct = "";
                if (isNaN(Dis) || isNaN(Amt)) {
                    perc = " ";
                }
                else {
                    perc = ((Dis / 100) * Amt).toFixed(2);
                    $('#sdisamt').val(perc);
                    var amtAfter = parseInt($('#Amt').val());
                    deduct = amtAfter - perc;
                    $('#GTtl').val(deduct);
                }
            }

            var listdel1 = [];

            $('.delete2').click(function () {
                debugger;
                listdel1.push({
                    "DSaleId": $(this).closest('tr').find('td').eq(6).find('input').val()
                })
                $(this).closest('tr').remove();
                addcal();
            })

            $('#AddItems').click(function () {
                debugger;
                if ($('#ProductID option:selected').text() != "---Select---") {
                    var ProductID = $('#ProductID').val();
                    var ProductIDname = $('#ProductID option:selected').text();
                    var Cost = $('#DSal_salcst').val();
                    var Qty = $('#DSal_ItmQty').val();
                    var NetTotal = $('#Amount').val();
                    var DpurIdadd = $('#DpurHid').val();
                    /*"<tr class='select-row2' ondblclick='update(this)'><td width='25%'><label> " + ProductIDname + "</label></td><td width='25%'><label> " + Qty + "</label></td><td width='25%'><label> " + Cost + "</label></td><td width='25%'><label> " + NetTotal + "</label></td><td><input type ='button' class='btn btn-danger remove delete2' value='Delete'><td width='25%'><label style='visibility:hidden'> " + ProductID + "</label></td></td><td><input type='hidden' class='form-control AlwId ' value= '" + DpurIdadd + "'></td></tr>"*/
                    var row = "<tr style class='select-row2' style='margin-top:10px'><td width='25%'><input type='text' class='form-control'  value= '" + ProductIDname + "'></td><td width='25%'><input class='form-control' type='text' value='" + Qty + "'></td><td width='25%'><input class='form-control' type='text' value= '" + Cost + "'></td><td width='25%'><input class='form-control' type='text' value='" + NetTotal + "'></td><td><a style='width: 100%; height:100%' class='delete2' id='AddItems'><i class='fas fa-trash - alt'></i></a></td><td width='25%'><label style='visibility:hidden'> " + ProductID + "</label></td><td><input type='hidden' class='form-control AlwId ' value='" + DpurIdadd + "'></td></tr>"
                    $('#body1').append(row);
                    $('#ProductID').prop('selectedIndex', 0);
                    $('#DSal_salcst').val("")
                    $('#DSal_ItmQty').val("")
                    $('#Amount').val("")
                    addcal();
                }
                else {
                    toastr.options.positionClass = "toast-bottom-full-width";
                    toastr.warning("Info Message", "SomeThing is Misssing");
                }
            })

            $('#Save').click(function () {
                debugger;
                var isallvalid = true;
                isallvalid = Validate();
                if (isallvalid) {
                    var list1 = [];
                    $('#AddSales tbody .select-row2 ').each(function (index, ele) {
                        list1.push({
                            "ItemQty": $(this).closest('tr').find('td').eq(1).find('input').val(),
                            "ItemCost": $(this).closest('tr').find('td').eq(2).find('input').val(),
                            "ItemTotalAmount": $(this).closest('tr').find('td').eq(3).find('input').val(),
                            "ItemId": $(this).find('td:eq(5)').text().trim(),
                            "DSalId": $(this).closest('tr').find('td').eq(6).find('input').val()
                        })
                        $(this).remove();
                    })

                    var obj = {
                        "MSal_dat": $('#MSal_dat').val(),
                        "CustomerID": $('#CustomerID').val(),
                        "Dis": $('#Dis').val(),
                        "Amt": $('#Amt').val(),
                        "MSal_sono": $('#SalNo').val(),
                        "GTtl": $('#GTtl').val(),
                        "MSaleid": $('#MSaleid').val(),
                        "PreBalance": $('#PreBalance').val(),
                        "Effected": $('#Effected_HasValue').prop('checked'),
                        "Prevebalanace": $('#PreBalance').val(),
                        "saleschilds": list1,
                        "SaleDele": listdel1
                    }

                    $.ajax({
                        type: 'Post',
                        url: '/Sales/AddSales',
                        contentType: "application/json?charset=utf-8",
                        data: JSON.stringify(obj),
                        success: function (data) {
                            Clear();
                            swal("", "Data Has Been Save", "success");

                        },
                    })
                }
            })

            function Clear() {
                $('input[type="text"]').val('')
                $('select').each(function () { $(this).val('') }
                )
            }

        </script>
    }
