@model MealBox.Models.Transactionmodel
@{
    ViewBag.Title = "Transaction";
}

@section Styles {

    <link href="~/Scripts/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />

    <link href="~/dist/css/sweetalert.css" rel="stylesheet" />

    <style>

        span.error {
            display: block;
            visibility: hidden;
            color: red;
            font-size: 100%;
        }

        tr.error {
            background-color: rgba(255,0,0,0.35);
        }
    </style>

}


<h1>Transaction</h1>

<h2>Opening Balance</h2>
<label id="openblnc"></label>

<label>Amount Variation</label>

<div class="col-md-3">

    <textbox class="form-control" readonly="readonly" id="AmtVar"></textbox>


</div>

<div class="row" style="margin-top:30px;">
    <button type="button" value="Pay" id="Payment" class="btn  bg-gradient-primary PayRec " style="margin-left:200px;">Payment</button>
        <button type="button" value="Rec" id="Recieve" class="btn bg-gradient-secondary PayRec">Recieve</button>
        <button type="button" value="Cash" id="CashBook" class="btn bg-gradient-info ">CashBook</button>
</div>

@*<div class="btn-group btn-group-toggle" data-toggle="buttons">
    <label class="btn btn-block bg-gradient-primary">
        <input type="radio" name="options" class="PayRec" id="option_b1" autocomplete="off" checked="">Payment
    </label>
    <label class="btn bg-gradient-secondary">
        <input type="radio" name="options" class="PayRec" id="option_b2" autocomplete="off"> Recieve
    </label>
    <label class="btn btn-block bg-gradient-info">
        <input type="radio" name="options"  id="option_b3" value="" autocomplete="off"> CashBook
    </label>
</div>*@


<div id="cash">
    <p>_______________________________________________________________________________________________________________________________________________________________________________________________________________</p>
    <div>
        <label id="Cashlab" style="display:none">CashBook</label>

        <label id="TotalExpense" style="float:right; margin-right:40px;">Total Expense</label>
    </div>
    <div>
        <label style="float:left;display:none" id="Terlab">Total Earning</label>
    </div>
</div>
<div id="PayRecdiv" style="display:none">
    <label id="paylab" style="display:none">Payment</label>
    <label id="Reclab" style="display:none">Recieve</label>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(x => x.expensesdat)
            @Html.TextBoxFor(x => x.expensesdat, new { @class = "form-control", @autocomplete = "off" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div id="PayAccount" style="display:none">
                <label>AccountPay</label>
                @Html.DropDownListFor(x => x.PayAccount, null, "---Select---", new { @class = "form-control PayAccountc select2 " })
            </div>
            <div id="RecievAccount" style="display:none">
                <label>AccountRec</label>
                @Html.DropDownListFor(x => x.RecAccount, null, "---Select---", new { @class = "form-control select2" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>VoucherType</label>
            @Html.DropDownList("vchtyp_id", new List<SelectListItem>
           {
             new SelectListItem {Text="---Select---",Value = "0"},
             new SelectListItem {Text="Cash",Value = "11"},
             new SelectListItem {Text="Bank",Value = "12"},
           }, new { @class = "form-control" })
        </div>
        <div class="col-md-6">
            <label>Payment Type</label>
            @Html.DropDownList("typeofpay", new List<SelectListItem>
               {
                 new SelectListItem {Text="---Select---",Value = "-1"},
                 new SelectListItem {Text="Cash",Value = "11"},
               }, new { @class = "form-control" })
        </div>
    </div>
    <div id="Bank" style="display:none;">
        <table id="Banktable" class="table-bordered container-fluid" style="margin-top:70px;">
            <thead>
                <tr>
                    <th style="text-align:center;">
                        Bank
                    </th>
                    <th style="text-align: center;">
                        Cheque No
                    </th>
                    <th style="text-align: center;">
                        Amount
                    </th>
                    <th style="text-align: center;">
                        Date
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="Bankbody">
            </tbody>
        </table>
    </div>
    <div class="row" style="margin-top:30px;">
        <div class="col-md-6">
            @Html.LabelFor(x => x.Amountpaid)
            @Html.TextBoxFor(x => x.Amountpaid, new { @class = "form-control" })
        </div>
    </div>
    <label>Balance</label>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(x => x.prevbal)
            @Html.TextBoxFor(x => x.prevbal, new { @class = "form-control" })
        </div>
        <input type="hidden" id="Amttype" />
    </div>
    <div class="row">
        <label>Expense Remarks</label>
        @Html.TextAreaFor(x => x.Expenseremarks, new { @class = "form-control" })
    </div>
    <input type="button" style="margin-top:20px;" id="Save" value="Save" class="btn btn-info" />
</div>

@section Scripts
    {

    <link href="~/Scripts/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />

    <link href="~/dist/css/sweetalert.css" rel="stylesheet" />


    <script type="text/javascript">

        $(document).ready(function () {

            $('#expensesdat').datepicker({
                format: "dd-MM-yyyy",
                orientation: "bottom auto",
                autoclose: true
            });
            OpeningBalance();

            $('.select2').select2();
        })

        $("#PayAccount").change(function () {

            if ($('#PayAccount option:selected').text() != "---Select---") {

                var id = "";

                id = $('.PayAccountc').val().trim();

                id = id.substring(id.indexOf('-') + 1);

                $.ajax({
                    url: '/Purchase/GetCredit?id=' + id.trim(),
                    method: 'Get',
                    contentType: 'application/jsonCharset=utf-8',
                    success: function (data) {
                        console.log(data);
                        if (data != null) {
                            $('#prevbal').val(data);
                        }
                    }
                })
            }
        })




        $("#RecAccount").change(function () {

            if ($('#RecAccount option:selected').text() != "---Select---") {

                var id = "";

                id = $('#RecAccount').val().trim();

                id = id.substring(id.indexOf('-') + 1);

                $.ajax({
                    url: '/Sales/GetSaleCredit?id=' + id,
                    method: 'Get',
                    contentType: 'application/jsonCharset=utf-8',
                    success: function (data) {
                        console.log(data);
                        if (data != null) {
                            $('#prevbal').val(data);
                        }
                    }
                })
            }
        })

        //$("#RecAccount").change(function () {

        //    if ($('#RecAccount option:selected').text() != "---Select---") {

        //        var id = "";

        //        id = $('#RecAccount').val().trim();

        //        id = id.substring(id.indexOf('-') + 1);

        //        //$.ajax({
        //            //url: '/Purchase/GetCredit?id=' + id.trim(),
        //            //method: 'Get',
        //            //contentType: 'application/jsonCharset=utf-8',
        //            //success: function (data) {
        //                //console.log(data);
        //                //if (data != null) {
        //                    //$('#PreviousBalance').val(data);
        //                //}
        //            //}
        //        //})
        //    //}
        ////})



        function PayaccDDl() {
            debugger;
            $.ajax({
                type: 'Get',
                url: '/Account/PayAccouvtddl',
                contentType: "application/json?charset=utf-8",
                success: function (result) {
                    console.log(result);
                    debugger;
                    console.log(result.length);
                    var fill = '<option value="-1" >---Select---</option>'
                    for (var i = 0; i < result.length; i++) {
                        fill += '<option value="' + result[i].AccNo + ' - ' + result[i].EmpId + ' ">' + result[i].AccName + '</option>';
                    }
                    $('.PayAccountc').html(fill);
                }
            })
        }


        function RecvaccDDl() {
            debugger;
            $.ajax({
                type: 'Get',
                url: '/Account/RecAccouvtddl',
                contentType: "application/json?charset=utf-8",
                success: function (result) {
                    console.log(result);
                    debugger;
                    console.log(result.length);
                    var fill = '<option value="-1" >---Select---</option>'
                    for (var i = 0; i < result.length; i++) {
                        fill += '<option value="' + result[i].AccNo + ' - ' + result[i].EmpId + ' ">' + result[i].AccName + '</option>';
                    }
                    $('#RecAccount').html(fill);
                }
            })
        }


        function OpeningBalance() {
            debugger;
            $.ajax({
                type: 'Get',
                url: '/Account/OpeningBalance',
                contentType: "application/json?charset=utf-8",
                success: function (result) {
                    console.log(result);
                    debugger;
                    console.log(result.length);

                    $('#AmtVar').text(result);
                }
            })
        }


        $('.PayRec').click(function () {
            debugger;
            var cheak = $(this).val();
            $('')
            if (cheak === 'Pay') {

                $('#Amttype').val(cheak);
                $('#PayRecdiv').show();
                $('#paylab').show();
                $('#Reclab').hide();
                $('#Cashlab').hide();
                $('#PayAccount').show();
                $('#RecievAccount').hide();
                Clear()
                PayaccDDl();

            }
            else if (cheak === 'Rec') {
                $('#Amttype').val(cheak);
                $('#PayRecdiv').show();
                $('#Reclab').show();
                $('#paylab').hide();
                $('#RecievAccount').show();
                $('#PayAccount').hide();
                Clear()
                RecvaccDDl();
            }

        })

        $('#Save').click(function () {
            debugger;
            var type = $('#Amttype').val();
            var Empid = "";
            var EmpaccNO = "";
            if (type === 'Pay') {
                var Acc = $('.PayAccountc').val();
                Acc = Acc.split('-')
                Empid = Acc[1];
                EmpaccNO = Acc[0];
            }
            else {
                var Acc = $('#RecAccount').val();
                Acc = Acc.split('-')
                Empid = Acc[1];
                EmpaccNO = Acc[0];
            }
            var obj =
            {
                "expensesdat": $('#expensesdat').val(),
                "typeofpay": $('#typeofpay option:selected').text(),
                "Amountpaid": $('#Amountpaid').val(),
                "prevbal": $('#prevbal').val(),
                "Expenseremarks": $('#Expenseremarks').val(),
                "type": type,
                "EmployeeId": Empid.trim(),
                "Accno": EmpaccNO.trim(),
                "opening_balance": $('#AmtVar').text(),

            }
            $.ajax({
                type: 'Post',
                url: '/Account/Transaction',
                contentType: "application/json?charset=utf-8",
                data: JSON.stringify(obj),
                success: function (data) {
                    Clear();
                    OpeningBalance();
                    swal("", "Data Has Been Save", "success");

                },
            })






        })





        function Clear() {
            $('input[type="text"]').val("");
            $('select').each(function () {
                $(this).val('')
            })
        }



        $('#CashBook').click(function () {
            $('#PayRecdiv').hide();
            $('#cash').show();
            $('#Cashlab').show();
        })

        $("#vchtyp_id").change(function () {
            debugger;
            var TypeValue = $(this).val();
            var PaymentCash = ["Cash"]
            var PaymentCheak = ["Cheak"]
            if (TypeValue == 11) {
                $('#typeofpay option[value="11"]').remove();
                $('#typeofpay option[value="12"]').remove();

                for (var i = 0; i < PaymentCash.length; i++) {

                    $("#typeofpay ").append('<option value=' + 11 + '>' + PaymentCash[i] + '</option>');
                }
                $('#Bank').hide();
                /*$('#ChequeAmt').attr('id', 'ChequeAmt');*/
                /*$('.csh_amtch').attr('id', 'csh_amt');*/
            }
            else if (TypeValue == 12) {

                $('#typeofpay option[value="11"]').remove();
                $('#typeofpay option[value="12"]').remove();

                for (var i = 0; i < PaymentCheak.length; i++) {
                    $("#typeofpay ").append('<option value=' + 12 + '>' + PaymentCheak[i] + '</option>');
                }

            }

            else {
                $('#typeofpay option[value="11"]').remove();
                $('#typeofpay option[value="22"]').remove();

                $("#typeofpay ").prop('selectedIndex', 0);
            }
        })

        $('#typeofpay').change(function () {
            debugger;

            if ($('#typeofpay option:selected').text() != "---Select---") {
                $('#typeofpay').siblings('span.error').css('visibility', 'hidden')
            }
            else {
                $('#typeofpay').siblings('span.error').css('visibility', 'visible')
            }

            if ($('#typeofpay option:selected').text() != "---Select---" && $('#vchtyp_id option:selected').text() != "---Select---") {
                if ($('#vchtyp_id option:selected').text() == 'Bank') {

                    $('#Bank').show();

                    //const ContRemv = document.getElementById('ChequeAmt');
                    //ContRemv.removeAttribute();

                }
                else if ($('#vchtyp_id option:selected').text() == 'Cash') {

                    $('#Bank').hide();

                }

            }

        })

    </script>
}